/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quizmanagementsystem;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import quizmanagementsystem.entities.Question;
import quizmanagementsystem.entities.QuizQuestion;
import quizmanagementsystem.entities.Subject;
import utils.Common;

/**
 *
 * @author Hassaan.Siddique
 */
public class Quiz extends javax.swing.JPanel {
    static DefaultTableModel tableModel;
    static int i = 1;
    static int selectedRow;
    Subject subject;
    private int minutes = 0;
    private int seconds = 0;
    static private boolean running = true;
    private int answersedQuestions = 0;
    private String selectedOption = null;
    private int currentQuestion;
    private float quizProgress;
    List<Question> quizQuestions;
    Map<String, Question> questionsMap = new HashMap<>();
    List<QuizQuestion> questionToShow = new ArrayList<>();
    private String quizId = "";
    private int maxQuestions = 0;

    /**
     * Creates new form AddQuestion
     */
    public Quiz() {
        initComponents();
    }
    
    public void setSubject(Subject subject) {
        clear();
        next.setText("Next");
        previous.setEnabled(false);
        this.subject = subject;
        minutes = 0;
        seconds = 0;
        boolean running = true;
        answersedQuestions = 0;
        quizProgress = 0;
        currentQuestion = 0;
        progress.setText("0.00");
        jProgressBar1.setValue(1);
        questionCount.setText("1");
        questionToShow.removeAll(questionToShow);
        quizId = Common.generatePrimaryKey();
        quizQuestions = new Question().getAllBySubject(subject.getName());
        quizQuestions.stream().forEach(x -> questionsMap.put(x.getId(), x));
        if(quizQuestions.size() >= subject.getQuizLength()) {
            questionCount1.setText("/"+String.valueOf(subject.getQuizLength()));
            maxQuestions = subject.getQuizLength();
            Collections.shuffle(quizQuestions);
            quizQuestions = quizQuestions.subList(0, subject.getQuizLength()-1);  
        }else{
            maxQuestions = quizQuestions.size();
            questionCount1.setText("/"+String.valueOf(quizQuestions.size()));
            Collections.shuffle(quizQuestions);
        }
        jProgressBar1.setMaximum(maxQuestions);
        for(int i=0;i<quizQuestions.size();i++){
            QuizQuestion qQ = new QuizQuestion();
            qQ.setQuizId(quizId);
            qQ.setSrNo(i);
            qQ.setQuestion(quizQuestions.get(i));
            qQ.setQuestionId(quizQuestions.get(i).getId());
            questionToShow.add(qQ);
        }
        displayQuestionData(questionToShow, currentQuestion);
        new Thread(new Runnable() {
            public void run() {
                while (running) {
                    SwingUtilities.invokeLater(new Runnable() {
                        public void run() {
                            timer.setText(String.valueOf(minutes)+":"+String.valueOf(seconds)+"/"+String.valueOf(subject.getQuizTime())+":00");
                        }
                    });
                    incrementTime();
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException e) {
                        System.out.println("Thread interrupted: " + e);
                    }
                }
            }
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel1 = new javax.swing.JLabel();
        questionCount1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        optionB = new javax.swing.JRadioButton();
        timer = new javax.swing.JLabel();
        progress = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        statement = new javax.swing.JTextArea();
        optionC = new javax.swing.JRadioButton();
        optionD = new javax.swing.JRadioButton();
        optionA = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        next = new javax.swing.JButton();
        previous = new javax.swing.JButton();
        questionCount = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 102, 102));
        setPreferredSize(new java.awt.Dimension(1500, 700));
        setLayout(null);

        jProgressBar1.setValue(1);
        add(jProgressBar1);
        jProgressBar1.setBounds(40, 20, 960, 20);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Option B");
        add(jLabel1);
        jLabel1.setBounds(40, 360, 180, 30);

        questionCount1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        questionCount1.setForeground(new java.awt.Color(255, 255, 255));
        questionCount1.setText("/10");
        add(questionCount1);
        questionCount1.setBounds(1070, 10, 70, 40);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Time:");
        add(jLabel3);
        jLabel3.setBounds(1180, 20, 60, 30);

        optionB.setBackground(new java.awt.Color(102, 102, 102));
        buttonGroup.add(optionB);
        optionB.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        optionB.setForeground(new java.awt.Color(255, 255, 255));
        optionB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                optionBMouseClicked(evt);
            }
        });
        add(optionB);
        optionB.setBounds(190, 360, 1110, 30);

        timer.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        timer.setForeground(new java.awt.Color(255, 255, 255));
        timer.setText("00:00/00.00");
        add(timer);
        timer.setBounds(1260, 10, 160, 50);

        progress.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        progress.setForeground(new java.awt.Color(255, 255, 255));
        progress.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        progress.setText("0.00");
        add(progress);
        progress.setBounds(380, 40, 70, 30);

        statement.setEditable(false);
        statement.setBackground(new java.awt.Color(102, 102, 102));
        statement.setColumns(20);
        statement.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        statement.setForeground(new java.awt.Color(255, 255, 255));
        statement.setLineWrap(true);
        statement.setRows(5);
        statement.setToolTipText("");
        statement.setAutoscrolls(false);
        jScrollPane1.setViewportView(statement);

        add(jScrollPane1);
        jScrollPane1.setBounds(40, 120, 1360, 160);

        optionC.setBackground(new java.awt.Color(102, 102, 102));
        buttonGroup.add(optionC);
        optionC.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        optionC.setForeground(new java.awt.Color(255, 255, 255));
        optionC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                optionCMouseClicked(evt);
            }
        });
        add(optionC);
        optionC.setBounds(190, 420, 1110, 30);

        optionD.setBackground(new java.awt.Color(102, 102, 102));
        buttonGroup.add(optionD);
        optionD.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        optionD.setForeground(new java.awt.Color(255, 255, 255));
        optionD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                optionDMouseClicked(evt);
            }
        });
        add(optionD);
        optionD.setBounds(190, 490, 1110, 30);

        optionA.setBackground(new java.awt.Color(102, 102, 102));
        buttonGroup.add(optionA);
        optionA.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        optionA.setForeground(new java.awt.Color(255, 255, 255));
        optionA.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                optionAStateChanged(evt);
            }
        });
        optionA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                optionAMouseClicked(evt);
            }
        });
        optionA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionAActionPerformed(evt);
            }
        });
        add(optionA);
        optionA.setBounds(190, 300, 1110, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("% completed");
        add(jLabel2);
        jLabel2.setBounds(460, 40, 180, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Option C");
        add(jLabel4);
        jLabel4.setBounds(40, 420, 180, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Option D");
        add(jLabel5);
        jLabel5.setBounds(40, 490, 180, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Option A");
        add(jLabel6);
        jLabel6.setBounds(40, 300, 180, 30);

        next.setBackground(new java.awt.Color(204, 153, 0));
        next.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        next.setForeground(new java.awt.Color(255, 255, 255));
        next.setText("Next");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });
        add(next);
        next.setBounds(340, 590, 220, 50);

        previous.setBackground(new java.awt.Color(204, 153, 0));
        previous.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        previous.setForeground(new java.awt.Color(255, 255, 255));
        previous.setText("Previous");
        previous.setEnabled(false);
        previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousActionPerformed(evt);
            }
        });
        add(previous);
        previous.setBounds(40, 590, 220, 50);

        questionCount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        questionCount.setForeground(new java.awt.Color(255, 255, 255));
        questionCount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        questionCount.setText("1");
        add(questionCount);
        questionCount.setBounds(1020, 10, 50, 40);
    }// </editor-fold>//GEN-END:initComponents

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        clear();
        saveQuestionData(questionToShow, currentQuestion);
        currentQuestion++;
        if(currentQuestion==maxQuestions) {
            int confirmation = JOptionPane.showConfirmDialog(null, "Are you sure to submit?");
            if (confirmation == 0) {
               next.setEnabled(false);
               previous.setEnabled(false);
                submmitQuiz(questionToShow);
            }
            currentQuestion--;
            displayQuestionData(questionToShow, currentQuestion);
        } else if(currentQuestion==maxQuestions-1){
            next.setText("Submit");
            questionCount.setText(String.valueOf(currentQuestion+1));
            jProgressBar1.setValue(currentQuestion+1); 
        } else {
            questionCount.setText(String.valueOf(currentQuestion+1));
            jProgressBar1.setValue(currentQuestion+1);
//            displayQuestionData(questionToShow, currentQuestion);
            previous.setEnabled(true);
            progress.setText(String.valueOf(quizProgress));
        }
        displayQuestionData(questionToShow, currentQuestion);
        // TODO add your handling code here:
    }//GEN-LAST:event_nextActionPerformed

    private void previousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousActionPerformed
        saveQuestionData(questionToShow, currentQuestion);
        currentQuestion--;
        clear();
        questionCount.setText(String.valueOf(currentQuestion+1));
        displayQuestionData(questionToShow, currentQuestion);
        next.setText("Next");
        jProgressBar1.setValue(currentQuestion+1);
        if(currentQuestion==0){
            previous.setEnabled(false);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_previousActionPerformed

    private void optionAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_optionAActionPerformed

    private void optionAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_optionAMouseClicked
        if(selectedOption==null){
            answersedQuestions++;
        }
        selectedOption = "A";
        quizProgress = ((float)answersedQuestions/(float)maxQuestions)*100;
        progress.setText(String.valueOf(quizProgress));
        // TODO add your handling code here:
    }//GEN-LAST:event_optionAMouseClicked

    private void optionBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_optionBMouseClicked
       if(selectedOption==null){
            answersedQuestions++;
        }
        selectedOption = "B";
        quizProgress = ((float)answersedQuestions/(float)maxQuestions)*100;
        progress.setText(String.valueOf(quizProgress));
        // TODO add your handling code here:
    }//GEN-LAST:event_optionBMouseClicked

    private void optionCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_optionCMouseClicked
        if(selectedOption==null){
            answersedQuestions++;
        }
        System.out.println("Selected Optuion: "+selectedOption);
        selectedOption = "C";   
        quizProgress = ((float) answersedQuestions/(float) maxQuestions)*100;
        progress.setText(String.valueOf(quizProgress));// TODO add your handling code here:
    }//GEN-LAST:event_optionCMouseClicked

    private void optionDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_optionDMouseClicked
        if(selectedOption==null){
            answersedQuestions++;
        }
        selectedOption = "D";   
        quizProgress = ((float) answersedQuestions/(float) maxQuestions)*100;
        progress.setText(String.valueOf(quizProgress));// TODO add your handling code here:        
        // TODO add your handling code here:
    }//GEN-LAST:event_optionDMouseClicked

    private void optionAStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_optionAStateChanged
            
// TODO add your handling code here:
    }//GEN-LAST:event_optionAStateChanged
    
    
    private void incrementTime() {
        seconds++;
        if (seconds == 60) {
            seconds = 0;
            minutes++;
        }
        if(minutes >= subject.getQuizTime()) {
            stopRunning();
            JOptionPane.showMessageDialog(null, "Time is Up.");
            previous.setEnabled(false);
            next.setEnabled(false);
            submmitQuiz(questionToShow);
        }
    }
    
    private void saveQuestionData(List<QuizQuestion> list, int index){
        list.get(index).setSelectedOption(selectedOption);
    }
    
    private void displayQuestionData(List<QuizQuestion> list, int index){
        QuizQuestion data = list.get(index);
        statement.setText(data.getQuestion().getStatement());
        List<String> options = new ArrayList<>(Arrays.asList(data.getQuestion().getOptions().split("~~")));
        optionA.setText(options.get(0));
        optionB.setText(options.get(1));
        optionC.setText(options.get(2));
        optionD.setText(options.get(3));
        if(!Common.isEmptyString(data.getSelectedOption()) && data.getSelectedOption().equals("A")) {
            optionA.setSelected(true);
            selectedOption = "A";
        }else if(!Common.isEmptyString(data.getSelectedOption()) && data.getSelectedOption().equals("B")) {
            optionB.setSelected(true);
            selectedOption = "B";
        } else if(!Common.isEmptyString(data.getSelectedOption()) && data.getSelectedOption().equals("C")) {
            optionC.setSelected(true);
            selectedOption = "C";
        } else if(!Common.isEmptyString(data.getSelectedOption()) && data.getSelectedOption().equals("D")) {
            optionD.setSelected(true);
            selectedOption = "D";
        } else {
            selectedOption = null;
        }
    }
    
    void clear(){
        buttonGroup.clearSelection();
    }
    
    void submmitQuiz(List<QuizQuestion> list){
        int marks = 0;
        List<String> answersList = new ArrayList<>();
        List<String> qIds = new ArrayList<>();
        quizmanagementsystem.entities.Quiz quiz = new quizmanagementsystem.entities.Quiz();
        quiz.setId(quizId);
        quiz.setSubjectId(subject.getId());
        quiz.setUserId(Login.logedInUser.getId());
        for(QuizQuestion question : list){
            System.out.println("Question : "+question.toString());
            qIds.add(question.getQuestionId());
            answersList.add(question.getSelectedOption());
            if(!Common.isEmptyString(question.getSelectedOption()) && question.getSelectedOption().equals(question.getQuestion().getAnswer())){
                marks++;
            }
        }
        quiz.setAnswers(answersList.toString());
        quiz.setQuestionsIds(qIds.toString());
        quiz.setObtainedMarks(marks);
        quiz.setTotalMarks(subject.getQuizLength());
        quiz.save();
        String result = "Obtained Marks: "+marks+"\nTotal Marks: "+quiz.getTotalMarks()+"\nResult: ";
        if(marks<subject.getPassingMarks()){
            result = result + "Fail...\nBatter Luck Next Time...!";
        } else {
            result = result + "Pass...\nCongratulation...! Great Job...";
        }
        JOptionPane.showMessageDialog(null, result);
    }

    public void stopRunning() {
        running = false;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton next;
    private javax.swing.JRadioButton optionA;
    private javax.swing.JRadioButton optionB;
    private javax.swing.JRadioButton optionC;
    private javax.swing.JRadioButton optionD;
    private javax.swing.JButton previous;
    private javax.swing.JLabel progress;
    private javax.swing.JLabel questionCount;
    private javax.swing.JLabel questionCount1;
    private javax.swing.JTextArea statement;
    private javax.swing.JLabel timer;
    // End of variables declaration//GEN-END:variables
}
